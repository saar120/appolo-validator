"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validation = exports.validate = exports.ArraySchema = exports.ObjectSchema = exports.BooleanSchema = exports.BufferSchema = exports.DateSchema = exports.StringSchema = exports.NumberSchema = exports.AnySchema = exports.FunctionSchema = exports.ValidationError = exports.ValidationErrorsError = exports.When = exports.boolean = exports.buffer = exports.date = exports.func = exports.and = exports.schema = exports.or = exports.when = exports.ref = exports.object = exports.array = exports.string = exports.number = exports.any = exports.Validator = exports.registerConverter = exports.registerConstraint = exports.registerSchema = void 0;
require("reflect-metadata");
const engine_1 = require("@appolo/engine");
const utils_1 = require("@appolo/utils");
const defaults_1 = require("./src/defaults/defaults");
const validator_1 = require("./src/validator/validator");
Object.defineProperty(exports, "Validator", { enumerable: true, get: function () { return validator_1.Validator; } });
const anySchema_1 = require("./src/types/any/anySchema");
Object.defineProperty(exports, "any", { enumerable: true, get: function () { return anySchema_1.any; } });
Object.defineProperty(exports, "AnySchema", { enumerable: true, get: function () { return anySchema_1.AnySchema; } });
const numberSchema_1 = require("./src/types/number/numberSchema");
Object.defineProperty(exports, "number", { enumerable: true, get: function () { return numberSchema_1.number; } });
const stringSchema_1 = require("./src/types/string/stringSchema");
Object.defineProperty(exports, "string", { enumerable: true, get: function () { return stringSchema_1.string; } });
const arraySchema_1 = require("./src/types/array/arraySchema");
Object.defineProperty(exports, "array", { enumerable: true, get: function () { return arraySchema_1.array; } });
const objectSchema_1 = require("./src/types/object/objectSchema");
Object.defineProperty(exports, "object", { enumerable: true, get: function () { return objectSchema_1.object; } });
const functionSchema_1 = require("./src/types/function/functionSchema");
Object.defineProperty(exports, "func", { enumerable: true, get: function () { return functionSchema_1.func; } });
const ref_1 = require("./src/schema/ref");
Object.defineProperty(exports, "ref", { enumerable: true, get: function () { return ref_1.ref; } });
const when_1 = require("./src/when/when");
Object.defineProperty(exports, "when", { enumerable: true, get: function () { return when_1.when; } });
const bufferSchema_1 = require("./src/types/buffer/bufferSchema");
Object.defineProperty(exports, "buffer", { enumerable: true, get: function () { return bufferSchema_1.buffer; } });
const booleanSchema_1 = require("./src/types/boolean/booleanSchema");
Object.defineProperty(exports, "boolean", { enumerable: true, get: function () { return booleanSchema_1.boolean; } });
const orConstraint_1 = require("./src/types/any/constraints/orConstraint");
Object.defineProperty(exports, "or", { enumerable: true, get: function () { return orConstraint_1.or; } });
const andConstraint_1 = require("./src/types/any/constraints/andConstraint");
Object.defineProperty(exports, "and", { enumerable: true, get: function () { return andConstraint_1.and; } });
const dateSchema_1 = require("./src/types/date/dateSchema");
Object.defineProperty(exports, "date", { enumerable: true, get: function () { return dateSchema_1.date; } });
const registerConstraint_1 = require("./src/schema/registerConstraint");
Object.defineProperty(exports, "registerConstraint", { enumerable: true, get: function () { return registerConstraint_1.registerConstraint; } });
const registerConverter_1 = require("./src/schema/registerConverter");
Object.defineProperty(exports, "registerConverter", { enumerable: true, get: function () { return registerConverter_1.registerConverter; } });
const decorators_1 = require("./src/decorators/decorators");
Object.defineProperty(exports, "schema", { enumerable: true, get: function () { return decorators_1.schema; } });
const numberSchema_2 = require("./src/types/number/numberSchema");
Object.defineProperty(exports, "NumberSchema", { enumerable: true, get: function () { return numberSchema_2.NumberSchema; } });
const stringSchema_2 = require("./src/types/string/stringSchema");
Object.defineProperty(exports, "StringSchema", { enumerable: true, get: function () { return stringSchema_2.StringSchema; } });
const arraySchema_2 = require("./src/types/array/arraySchema");
Object.defineProperty(exports, "ArraySchema", { enumerable: true, get: function () { return arraySchema_2.ArraySchema; } });
const objectSchema_2 = require("./src/types/object/objectSchema");
Object.defineProperty(exports, "ObjectSchema", { enumerable: true, get: function () { return objectSchema_2.ObjectSchema; } });
const booleanSchema_2 = require("./src/types/boolean/booleanSchema");
Object.defineProperty(exports, "BooleanSchema", { enumerable: true, get: function () { return booleanSchema_2.BooleanSchema; } });
const dateSchema_2 = require("./src/types/date/dateSchema");
Object.defineProperty(exports, "DateSchema", { enumerable: true, get: function () { return dateSchema_2.DateSchema; } });
const bufferSchema_2 = require("./src/types/buffer/bufferSchema");
Object.defineProperty(exports, "BufferSchema", { enumerable: true, get: function () { return bufferSchema_2.BufferSchema; } });
const functionSchema_2 = require("./src/types/function/functionSchema");
Object.defineProperty(exports, "FunctionSchema", { enumerable: true, get: function () { return functionSchema_2.FunctionSchema; } });
const ValidationError_1 = require("./src/common/errors/ValidationError");
Object.defineProperty(exports, "ValidationError", { enumerable: true, get: function () { return ValidationError_1.ValidationError; } });
const ValidationErrorsError_1 = require("./src/common/errors/ValidationErrorsError");
Object.defineProperty(exports, "ValidationErrorsError", { enumerable: true, get: function () { return ValidationErrorsError_1.ValidationErrorsError; } });
const registerSchema_1 = require("./src/schema/registerSchema");
Object.defineProperty(exports, "registerSchema", { enumerable: true, get: function () { return registerSchema_1.registerSchema; } });
const when_2 = require("./src/when/when");
Object.defineProperty(exports, "When", { enumerable: true, get: function () { return when_2.When; } });
for (let key of utils_1.Files.walk(__dirname, "src/types", ["js"])) {
    require(key);
}
exports.validate = {
    boolean: booleanSchema_1.boolean, any: anySchema_1.any, buffer: bufferSchema_1.buffer, date: dateSchema_1.date, func: functionSchema_1.func, object: objectSchema_1.object, array: arraySchema_1.array, string: stringSchema_1.string, number: numberSchema_1.number, when: when_1.when, or: orConstraint_1.or
};
async function validation(options = {}) {
    let app = engine_1.createApp({ root: __dirname });
    app.injector.addObject("options", utils_1.Objects.defaults({}, options, defaults_1.ValidatorDefaults));
    await app.launch();
    let server = app.injector.get(validator_1.Validator);
    return server;
}
exports.validation = validation;
//# sourceMappingURL=index.js.map